{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tranings\\\\React_Projects\\\\React-Tutorial\\\\new_app\\\\src\\\\Component\\\\Tips.jsx\";\nimport React from 'react'; //Some Constant Declaration\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst curly = '{}',\n      Temporal = 'Temporal',\n      Literal = 'Literal',\n      date = new Date(); //Internal CSS \n// const textdeco = {textDecoration : 'none'}\n\nfunction Tips() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Tips and Tricks in React \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      style: {\n        fontSize: \"17px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [`Date:${date.toLocaleDateString()}, `, ` Time: ${date.toLocaleTimeString()}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"To export a Functional component from another File we use \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"export default \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: `FunctionName`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), \"(no parenthesis required after function name)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"To export multiple Functional component from another File we use\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://flaviocopes.com/how-to-export-multiple-functions-javascript/\",\n            target: \"#\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"export \", /*#__PURE__*/_jsxDEV(\"i\", {\n                children: `Function1, Function2`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), \"(no parenthesis required after function name)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In React v16 it's possible for render() to return multiple element in array []\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"React.Fragment\", `(<> </>)`, \" is used because it is faster than array and uses less memory than div.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"React.Fragment is used because it is faster than array and uses less memory than div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sum of 2 + 3 is \", 2 + 3, \" and multiplication is \", 2 * 3, \" (Using Javascript Expression)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Trick to show Math.random() using Javascript element is \", Math.random()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"You can only use expression inside\", curly, \"and not statement(like if, for, while)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `This the technique to use \n            ${Temporal} ${Literal}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"To get the Date and Time in Javascript, this is the following Syntax:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 89\n          }, this), \"const date = new Date();\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this), \"const curDate = date.toLocaleDateString();\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), \"const curTime = date.toLocaleTimeString();\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contenteditable is global attribute. It is used to change the content inside h1,h2, ... Tags\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            contentEditable: \"true\",\n            children: \"Select me to change my content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", '<img/>', \" is a Self Closing Tag.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 54\n          }, this), \"In ReactJS it is necessary to write alt while using img tag else it will give some warning \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 44\n          }, this), '<img src = \"https://picsum.photos\" alt = \"Random Image\"/>']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Adding Text Shadow makes Your code Looks Awesome.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 69\n          }, this), \"text-shadow: x-direction y-direction blur-radius color; (x, y can be negative also)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 96\n          }, this), \"text-shadow: -3px 0px yellow;\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Class is reserved keyword in React. So we use className in css for React.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontFamily: \"Sriracha\"\n          },\n          children: \"Syntax to write Internal CSS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [`<h1 style = {{`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 35\n          }, this), `color: crimson;`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 36\n          }, this), `font-size: 32px;`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 38\n          }, this), `font-family: sans-serif;`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 45\n          }, this), `}}>`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 90\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontFamily: \"Sriracha\"\n          },\n          children: \"Syntax to write Inline CSS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [`const heading  = {`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 35\n          }, this), `color: 'crimson',`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 38\n          }, this), `font-size: '32px',`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 40\n          }, this), `font-family: 'sans-serif'`, `}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 88\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"To add Css property dynamically\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 51\n          }, this), \"const cssStyle = \", `{}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 45\n          }, this), \"cssStyle.color = 'green'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To Store jsx element in separate file/component we use fileName.jsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"When we export a function from a jsx file, show it using paranthesis using \", `{funcName()}`, \"else it will show empty.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Really intersiting thing to show dont know what to write.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 77\n          }, this), \"You can import everything as an object using import * as \", `<obj>`, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 80\n          }, this), \"E.g. import * as ques from \\\"./App\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 47\n          }, this), `<p> {ques.default}    </p>`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 43\n          }, this), `<p> {ques.favprog()}  </p>`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 43\n          }, this), `<p> {ques.myName()}   </p>`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 43\n          }, this), `<p> {ques.myNames()}  </p>`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.youtube.com/embed/b7JJCGXlACM?controls=0&start=890\",\n            target: \"#\",\n            children: \"Wacth this for more info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Tips;\nexport default Tips;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tips\");","map":{"version":3,"sources":["D:/Tranings/React_Projects/React-Tutorial/new_app/src/Component/Tips.jsx"],"names":["React","curly","Temporal","Literal","date","Date","Tips","fontSize","toLocaleDateString","toLocaleTimeString","Math","random","fontFamily"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\n\r\n//Some Constant Declaration\r\nconst curly = '{}', Temporal = 'Temporal', Literal = 'Literal',date = new Date()\r\n\r\n//Internal CSS \r\n// const textdeco = {textDecoration : 'none'}\r\n\r\nfunction Tips(){\r\n    return (\r\n        <>\r\n        <h1 className = \"heading\">Tips and Tricks in React </h1>\r\n        <ol style={{fontSize: \"17px\"}}>\r\n            <p>{`Date:${date.toLocaleDateString()}, `}\r\n            {` Time: ${date.toLocaleTimeString()}`}</p>\r\n\r\n            <li><p>To export a Functional component from another File\r\n                we use <b>export default <i>{`FunctionName`}\r\n                </i></b><br></br>(no parenthesis required after function name)</p>\r\n            </li>\r\n\r\n\r\n            <li><p>To export multiple Functional component from another File\r\n                we use&nbsp;\r\n                 <a href = \"https://flaviocopes.com/how-to-export-multiple-functions-javascript/\" \r\n                 target = \"#\">\r\n                    <b>export <i>{`Function1, Function2`}</i></b></a>\r\n                <br></br>(no parenthesis required after function name)\r\n                </p>\r\n            </li>\r\n\r\n\r\n            <li>\r\n            <p>In React v16 it's possible for render()\r\n                 to return multiple element in array []</p>\r\n            </li>\r\n\r\n            <li><p>React.Fragment{`(<> </>)`} is used because it is faster than array\r\n             and uses less memory than div.</p></li>\r\n\r\n\r\n            <li><p>React.Fragment is used because it is faster than array\r\n             and uses less memory than div</p></li>\r\n\r\n\r\n            <li><p>Sum of 2 + 3 is {2 + 3} and multiplication is {2 * 3} (Using Javascript Expression)</p></li>\r\n\r\n\r\n            <li><p>Trick to show Math.random() \r\n            using Javascript element is {Math.random()}</p></li>\r\n\r\n\r\n            <li><b>You can only use expression inside{curly}\r\n            and not statement(like if, for, while)</b></li>\r\n\r\n\r\n            <li><p>{`This the technique to use \r\n            ${Temporal} ${Literal}`}</p></li>\r\n\r\n            <li><p>To get the Date and Time in Javascript, this is the following Syntax:<br></br>\r\n            const date = new Date();<br></br>const curDate = date.toLocaleDateString();\r\n            <br></br>const curTime = date.toLocaleTimeString();</p></li>\r\n\r\n            <li><p>Contenteditable is global attribute.\r\n                It is used to change the content inside h1,h2, ... Tags<br></br>\r\n                <h3 contentEditable = \"true\">Select me to change my content</h3>\r\n                </p></li>\r\n\r\n            <li><p> {'<img/>'} is a Self Closing Tag.<br></br>\r\n            In ReactJS it is necessary to write alt while using img tag\r\n            else it will give some warning <br></br>\r\n            {'<img src = \"https://picsum.photos\" alt = \"Random Image\"/>'}\r\n                </p></li>\r\n\r\n            \r\n            <li><p>Adding Text Shadow makes Your code Looks Awesome.<br></br>\r\n            text-shadow: x-direction y-direction blur-radius color; (x, y can be negative also)<br></br>\r\n            text-shadow: -3px 0px yellow;\r\n                </p></li>\r\n            \r\n            <li><p>Class is reserved keyword in React. So we use className in css for React.\r\n                </p></li>\r\n            \r\n            <li><h3 style = {{fontFamily: \"Sriracha\"}}>Syntax to write Internal CSS:</h3><p>\r\n                {`<h1 style = {{`}<br></br>\r\n                {`color: crimson;`}<br></br>\r\n                {`font-size: 32px;`} <br></br>\r\n                {`font-family: sans-serif;`}<br></br>\r\n            {`}}>`}</p></li>\r\n\r\n            <li><h3 style = {{fontFamily: \"Sriracha\"}}>Syntax to write Inline CSS:</h3><p>\r\n            {`const heading  = {`}<br></br>\r\n                {`color: 'crimson',`}<br></br>\r\n                {`font-size: '32px',`} <br></br>\r\n                {`font-family: 'sans-serif'`}{`}`}</p></li>\r\n            <li><p>To add Css property dynamically<br></br>\r\n                    const cssStyle = {`{}`} <br></br>\r\n                    cssStyle.color = 'green'\r\n            </p></li>\r\n\r\n\r\n            <li><p>To Store jsx element in separate \r\n                file/component we use fileName.jsx</p></li>\r\n            \r\n            <li><p>When we export a function from a jsx file, \r\n                show it using paranthesis using {`{funcName()}`}\r\n                else it will show empty.\r\n                </p></li>\r\n\r\n            <li><p>Really intersiting thing to show dont know what to write.<br></br>\r\n            You can import everything as an object using import * as {`<obj>`}.<br></br>\r\n            E.g. import * as ques from \"./App\"<br></br>\r\n            {`<p> {ques.default}    </p>`}<br></br>\r\n            {`<p> {ques.favprog()}  </p>`}<br></br>\r\n            {`<p> {ques.myName()}   </p>`}<br></br>\r\n            {`<p> {ques.myNames()}  </p>`}<br></br>\r\n            <a href=\"https://www.youtube.com/embed/b7JJCGXlACM?controls=0&amp;start=890\" target = '#'>Wacth this for more info</a>\r\n            </p></li>\r\n\r\n            \r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tips\r\n"]},"metadata":{},"sourceType":"module"}